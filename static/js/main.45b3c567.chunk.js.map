{"version":3,"sources":["images/zero.svg","images/cross.svg","components/Board.js","App.js","reportWebVitals.js","index.js"],"names":["initialBoard","Array","fill","winSeq","images","O","zero","X","cross","buttonStyles","borderTop","borderLeft","borderRight","borderBottom","Board","props","computerMoves","state","active","turn","board","boardState","moved","seq","inPos","i","push","length","includes","handleMove","random","Math","floor","checkDrawCondition","filter","v","checkWinCondition","flag","index","setState","checks","renderGrid","buttons","map","onClick","style","src","alt","className","winText","this","grid","turnText","fontSize","React","Component","App","display","justifyContent","alignItems","height","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45b3c567.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/zero.a10f561f.svg\";","export default __webpack_public_path__ + \"static/media/cross.17a94979.svg\";","import React from 'react';\n\nimport '../stylesheets/board.css';\n\nimport zero from '../images/zero.svg';\nimport cross from '../images/cross.svg';\n\nconst initialBoard = Array(9).fill(null);\n\nconst winSeq = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n];\n\nvar images = {\n    O: zero,\n    X: cross,\n};\n\nvar buttonStyles = [\n    { borderTop: 'none', borderLeft: 'none' },\n    { borderTop: 'none' },\n    { borderTop: 'none', borderRight: 'none' },\n    { borderLeft: 'none' },\n    {},\n    { borderRight: 'none' },\n    { borderBottom: 'none', borderLeft: 'none' },\n    { borderBottom: 'none' },\n    { borderBottom: 'none', borderRight: 'none' },\n];\n\nclass Board extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            boardState: initialBoard,\n            turn: 'X',\n            active: true,\n            winText: null,\n            checks: false,\n        };\n    }\n\n    componentDidUpdate() {\n        if (!this.state.active) {\n            return;\n        }\n        if (!this.state.checks) {\n            if (this.checkWinCondition('O')) {\n                this.setState({\n                    active: false,\n                    winText: 'O wins',\n                });\n            } else if (this.checkWinCondition('X')) {\n                this.setState({\n                    active: false,\n                    winText: 'X wins',\n                });\n            } else if (this.checkDrawCondition()) {\n                this.setState({\n                    active: false,\n                    winText: 'Game is Draw',\n                });\n            }\n            this.setState({\n                checks: true,\n            });\n        }\n        if (this.state.checks) {\n            this.computerMoves();\n        }\n    }\n\n    computerMoves = () => {\n        if (!this.state.active) return;\n        if (this.state.turn === 'X') return;\n        var board = this.state.boardState;\n        var moved = false;\n\n        for (var seq of winSeq) {\n            var inPos = [];\n            for (var i of seq) {\n                if (board[i] === 'O') {\n                    inPos.push(i);\n                }\n            }\n            if (inPos.length >= 2) {\n                for (i of seq) {\n                    if (!inPos.includes(i) && board[i] === null) {\n                        this.handleMove(i);\n                        moved = true;\n                        return;\n                    }\n                }\n            }\n        }\n\n        if (moved) return;\n\n        for (var seq of winSeq) {\n            var inPos = [];\n            for (var i of seq) {\n                if (board[i] === 'X') {\n                    inPos.push(i);\n                }\n            }\n            if (inPos.length >= 2) {\n                for (i of seq) {\n                    if (!inPos.includes(i) && board[i] === null) {\n                        this.handleMove(i);\n                        moved = true;\n                        return;\n                    }\n                }\n            }\n        }\n\n        if (moved) return;\n\n        while (!moved) {\n            var random = Math.floor(Math.random() * 9);\n            if (board[random] === null) {\n                this.handleMove(random);\n                moved = true;\n            }\n        }\n    };\n\n    checkDrawCondition = () => {\n        if (this.state.active) {\n            if (this.state.boardState.filter((v) => v === null).length === 0)\n                return true;\n        }\n        return false;\n    };\n\n    checkWinCondition = (turn) => {\n        var board = this.state.boardState;\n        var flag = false;\n        for (var seq of winSeq) {\n            flag = true;\n            for (var i of seq) {\n                if (board[i] !== turn) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    handleMove = (index) => {\n        if (!this.state.active) return;\n        var turn = this.state.turn;\n        var boardState = this.state.boardState;\n        if (boardState[index] == null) boardState[index] = turn;\n        if (turn === 'X') {\n            turn = 'O';\n        } else {\n            turn = 'X';\n        }\n\n        this.setState({\n            boardState,\n            turn,\n            checks: false,\n        });\n    };\n\n    renderGrid = () => {\n        var buttons = this.state.boardState.map((v, index) => {\n            return (\n                <button\n                    onClick={() => {\n                        this.handleMove(index);\n                    }}\n                    style={buttonStyles[index]}\n                >\n                    {v && (\n                        <img\n                            src={images[v]}\n                            alt={v}\n                            style={{ filter: 'invert(100%)' }}\n                        />\n                    )}\n                </button>\n            );\n        });\n\n        return <div className=\"grid\">{buttons}</div>;\n    };\n\n    render() {\n        let grid = this.renderGrid();\n\n        let turnText = this.state.turn === 'X' ? \"X's turn\" : \"O's turn\";\n\n        if (!this.state.active) turnText = 'Game Over';\n\n        return (\n            <div className=\"container\">\n                <h1>Tic Tac Toe</h1>\n                <div className=\"text\">{turnText}</div>\n                {grid}\n                <div className=\"text\" style={{ fontSize: '42px' }}>\n                    {this.state.winText || <>&nbsp;</>}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Board;\n","import './App.css';\n\nimport Board from './components/Board';\n\nfunction App() {\n    return (\n        <div\n            className=\"App\"\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '100vh',\n                width: '100%',\n            }}\n        >\n            <Board />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}